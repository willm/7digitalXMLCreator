package gui;
import javax.swing.*;
import java.awt.event.*;

import main.Xml;
 
public class ProductGui extends javax.swing.JFrame {

    private JLabel logoLabel;                    
    private JButton addParBut, addTerBut, addTrkBut;
    private JTextField artistText, coplineText;
    private JButton crtPrdctBut;
    private JTextField dateText;
    private JTextField distText;
    private JButton edtParBut, edtTerBut, editTrackButton;
    private JCheckBox explicitBox;
    private JTextField genreA, genreB, genreC;
    private JTextField imageText;
    private JLabel jLabel1, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8, jLabel9;
    private JList trackList, jList2, participantsList;
    private JPanel jPanel1, jPanel2;
    private JScrollPane jScrollPane1, jScrollPane2, jScrollPane3;
    private JTextField labelText;
    private JButton mkXmlBut;
    private JComboBox pTypeBox;
    private JTextField publineText;
    private JButton remParBut, remTerBut, removeTrackkButton;
    private JTextField titleText, upcText;
    private JButton clearAllBut;
    private JButton edtPrdctBut;
    private javax.swing.JButton excelBut;
        
    private JTextField[] gfields = new JTextField[3];

    private ButHandler butlis = null;
    private TrkHandler trklis = null;
    private TerHandler terlis = null;
    private TrkRemHandler trkremlis = null;
    private PrintHandler prntlis = null;
    private TrkEditHandler trkedtlis =null;
    private PartHandler partlis = null;
    private TerEditHandler teredtlis = null;
    private TertRemHandler terremlis = null;
    private PartEditHandler paredtlis = null;
    private ParticipantRemovalHandler parremlis = null;
    private StartOverHandler startlis = null;
    private ProdEdtHandler prodedtlis = null;
    private ExcelImpHandler excellis = null;
     

    private Xml theXml;
    private TrackGui trackGui = null;
    private TerritoryGui territory = null;
    private ParticipantGui part = null;
    private ReadGui excelReader = null;
    private boolean test =false;
    private boolean containsTrack =false;
    private boolean containsTer = false;
    private boolean containsPar = false;
    private boolean isEdit = false;

    private String[] tracklist = {  };
    private String[] terlist = {  };
    private String[] parlist = {  };
    private DefaultListModel sampleModel, tersampleModel, participantSampleModel;
    
    private int trackCount = 0;

    public ProductGui() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
                        

    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        distText = new javax.swing.JTextField();
        upcText = new javax.swing.JTextField();
        labelText = new javax.swing.JTextField();
        imageText = new javax.swing.JTextField();
        titleText = new javax.swing.JTextField();
        dateText = new javax.swing.JTextField();
        publineText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pTypeBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        coplineText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        artistText = new javax.swing.JTextField();
        explicitBox = new javax.swing.JCheckBox();
        genreA = new javax.swing.JTextField();
        genreB = new javax.swing.JTextField();
        genreC = new javax.swing.JTextField();
        gfields[0] = genreA;
        gfields[1] = genreB;
        gfields[2] = genreC;
        jLabel11 = new javax.swing.JLabel();
        crtPrdctBut = new javax.swing.JButton();
        mkXmlBut = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        trackList = new javax.swing.JList();
        jLabel12 = new javax.swing.JLabel();
        addTrkBut = new javax.swing.JButton();
        editTrackButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        addTerBut = new javax.swing.JButton();
        edtTerBut = new javax.swing.JButton();
        edtParBut = new javax.swing.JButton();
        addParBut = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        participantsList = new javax.swing.JList();
        jLabel14 = new javax.swing.JLabel();
        removeTrackkButton = new javax.swing.JButton();
        remTerBut = new javax.swing.JButton();
        remParBut = new javax.swing.JButton();
        clearAllBut = new javax.swing.JButton();
        edtPrdctBut = new javax.swing.JButton();
        logoLabel = new javax.swing.JLabel();
        excelBut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("7digital XML Creator V 1.0");

        imageText.setText(".jpg");

        dateText.setText("YYYYMMDD");     
        
        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("7d.jpg")));

        jLabel1.setText("Distributor");

        jLabel2.setText("UPC/EAN");

        pTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single", "Album", "Video" }));

        jLabel3.setText("Product Type");

        jLabel4.setText("Label");

        jLabel5.setText("Image");

        jLabel6.setText("Product Title");

        jLabel7.setText("Release Date");

        jLabel8.setText("Publisher Line");

        jLabel9.setText("Copyright Line");

        jLabel10.setText("Artist");

        explicitBox.setText("Is Explicit");

        jLabel11.setText("Genres");

        crtPrdctBut.setText("Create / Update Product");
        
        edtPrdctBut.setText("Edit Product");
        edtPrdctBut.setEnabled(false);
        clearAllBut.setText("Clear All");
        
        excelBut.setText("Import from Excel");
        

        mkXmlBut.setText("Make XML");
        mkXmlBut.setEnabled(false);

javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(clearAllBut)
                        .addContainerGap(396, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(mkXmlBut)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                                .addComponent(excelBut))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(artistText, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                        .addComponent(publineText, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                        .addComponent(coplineText, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                        .addComponent(titleText, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                        .addComponent(pTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(imageText, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                        .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(upcText, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelText, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(distText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(genreA)
                                            .addComponent(explicitBox))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(genreB, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(genreC, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(crtPrdctBut)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtPrdctBut)))
                        .addGap(45, 45, 45))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(logoLabel)
                        .addContainerGap(427, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLabel)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(distText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(upcText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(pTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publineText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coplineText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(artistText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(explicitBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genreA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genreB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(genreC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crtPrdctBut)
                    .addComponent(edtPrdctBut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(mkXmlBut, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(clearAllBut))
                    .addComponent(excelBut))
                .addContainerGap())
        );
        sampleModel = new DefaultListModel();
        for(int i = 0; i<tracklist.length; i++){
            sampleModel.addElement(tracklist[i]);
        }
        trackList.setModel(sampleModel);
        
        trackList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(trackList);

        jLabel12.setText("Tracks");

        addTrkBut.setText("Add Track");
        addTrkBut.setEnabled(false);

        editTrackButton.setText("Edit Track");
        editTrackButton.setEnabled(false);

        jLabel13.setText("Territories");

        tersampleModel = new DefaultListModel();
        for(int i = 0; i<terlist.length; i++){
            tersampleModel.addElement(terlist[i]);
        }
        
        jList2.setModel(tersampleModel);
        
        jScrollPane2.setViewportView(jList2);

        addTerBut.setText("Add Territory");
        addTerBut.setEnabled(false);

        edtTerBut.setText("Edit Territory");
        edtTerBut.setEnabled(false);

        edtParBut.setText("Edit Prtcpnt");
        edtParBut.setEnabled(false);

        addParBut.setText("Add Participant");
        addParBut.setEnabled(false);
        
        participantSampleModel = new DefaultListModel();
        for(int i = 0; i<parlist.length; i++){
            participantSampleModel.addElement(parlist[i]);
        }
        participantsList.setModel(participantSampleModel);
        jScrollPane3.setViewportView(participantsList);

        jLabel14.setText("Product Participants");

        removeTrackkButton.setText("Remove Track");
        removeTrackkButton.setEnabled(false);

        remTerBut.setText("Remove Ter");
        remTerBut.setEnabled(false);

        remParBut.setText("Remove Prtcpnt");
        remParBut.setEnabled(false);


        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                    .addComponent(jLabel12)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addTrkBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editTrackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeTrackkButton))
                    .addComponent(jLabel13)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addTerBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtTerBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remTerBut))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addParBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtParBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remParBut)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTrkBut)
                    .addComponent(editTrackButton)
                    .addComponent(removeTrackkButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTerBut)
                    .addComponent(edtTerBut)
                    .addComponent(remTerBut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addParBut)
                    .addComponent(edtParBut)
                    .addComponent(remParBut))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        //Attaching Listeners
        
        butlis = new ButHandler();
        crtPrdctBut.addActionListener(butlis);
        
        trklis = new TrkHandler();
        addTrkBut.addActionListener(trklis);
        
        prntlis = new PrintHandler();
        mkXmlBut.addActionListener(prntlis);
        
        trkedtlis = new TrkEditHandler();
        editTrackButton.addActionListener(trkedtlis);
        
        trkremlis = new TrkRemHandler();
        removeTrackkButton.addActionListener(trkremlis);
        
        terlis = new TerHandler();
        addTerBut.addActionListener(terlis);
        
        partlis = new PartHandler();
        addParBut.addActionListener(partlis);
        
        teredtlis = new TerEditHandler();
        edtTerBut.addActionListener(teredtlis); 
        
        terremlis = new TertRemHandler();
        remTerBut.addActionListener(terremlis);
        
        paredtlis = new PartEditHandler();
        edtParBut.addActionListener(paredtlis);
        
        parremlis = new ParticipantRemovalHandler();
        remParBut.addActionListener(parremlis);
        
        startlis = new StartOverHandler();
        clearAllBut.addActionListener(startlis);
        
        prodedtlis = new ProdEdtHandler();
        edtPrdctBut.addActionListener(prodedtlis);
        
        excellis = new ExcelImpHandler();
        excelBut.addActionListener(excellis);
        

        pack();
    }                                                 

    /**
    * Main Method
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductGui().setVisible(true);
            }
        });
    }
    public void attachtotrack(){
        //attaches a track gui to this product
        trackGui.addPro(this);
    }
   
    public ProductGui returnThis(){
        return this;
    }
    
    public void updateTList(String title){
        //this adds items to the tracklist
            int index = sampleModel.getSize();
            sampleModel.addElement(title);
            getContentPane().invalidate();
            getContentPane().validate();
            trackList.setSelectedIndex(index);
            trackList.ensureIndexIsVisible(index);
            if(editTrackButton.isEnabled()==false){
                editTrackButton.setEnabled(true);
            }
            if(removeTrackkButton.isEnabled()==false){
                removeTrackkButton.setEnabled(true);
            }
            mkXmlBut.setEnabled(true);
        }
        
        public void updateTrackTitleInList(int pos, String newTitle){
            int index = sampleModel.getSize();
            sampleModel.set(pos, newTitle);
            getContentPane().invalidate();
            getContentPane().validate();
            trackList.setSelectedIndex(index);
            trackList.ensureIndexIsVisible(index);
        }
        
        public void remFrmTrkList(int pos){
            int index = sampleModel.getSize();
            sampleModel.remove(pos);
            getContentPane().invalidate();
            getContentPane().validate();
            trackList.setSelectedIndex(index);
            trackList.ensureIndexIsVisible(index);
            }
        
        public void updateTerList(String title){
        //this adds items to the tracklist
            int index = tersampleModel.getSize();
            tersampleModel.addElement(title);
            getContentPane().invalidate();
            getContentPane().validate();
            jList2.setSelectedIndex(index);
            jList2.ensureIndexIsVisible(index);
            if(edtTerBut.isEnabled()==false){
                edtTerBut.setEnabled(true);
            }
            if(remTerBut.isEnabled()==false){
                remTerBut.setEnabled(true);
            }
        }
        
        public void updateTertitleInList(int pos, String newTitle){
            int index = tersampleModel.getSize();
            tersampleModel.set(pos, newTitle);
            getContentPane().invalidate();
            getContentPane().validate();
            jList2.setSelectedIndex(index);
            jList2.ensureIndexIsVisible(index);
        }
        
        public void remFrmTerList(int pos){
            int index = tersampleModel.getSize();
            tersampleModel.remove(pos);
            getContentPane().invalidate();
            getContentPane().validate();
            jList2.setSelectedIndex(index);
            jList2.ensureIndexIsVisible(index);
            }
        
        public void updateParList(String name){
            int index = participantSampleModel.getSize();
            participantSampleModel.addElement(name);
            getContentPane().invalidate();
            getContentPane().validate();
            participantsList.setSelectedIndex(index);
            participantsList.ensureIndexIsVisible(index);
            if(edtParBut.isEnabled()==false){
                edtParBut.setEnabled(true);
            }
            if(remParBut.isEnabled()==false){
                remParBut.setEnabled(true);
            }
        }
        
        public void removeFromParticipantList(int pos){
            int index = participantSampleModel.getSize();
            participantSampleModel.remove(pos);
            getContentPane().invalidate();
            getContentPane().validate();
            participantsList.setSelectedIndex(index);
            participantsList.ensureIndexIsVisible(index);
            }
        
        public void updateParticipantInList(int pos, String newTitle){
            int index = participantSampleModel.getSize();
            participantSampleModel.set(pos, newTitle);
            getContentPane().invalidate();
            getContentPane().validate();
            participantsList.setSelectedIndex(index);
            participantsList.ensureIndexIsVisible(index);
        }
            
        
        public int getTrackCount(){
            return trackCount;
        }
        
        public void setTracks(){
            containsTrack = true;
        }
        
        public void setTerritories(){
            containsTer = true;
        }
        
        public void setPar(){
            containsPar = true;
        }
        
       public void productReady(){
            if(containsTrack == true && containsTer == true){
                mkXmlBut.setEnabled(true);
            }
            else{
                mkXmlBut.setEnabled(false);
            }
        }
        
        //Action Listeners
        
        private class ButHandler implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            
            String theType = null;
            String rude = null;
            
            if(pTypeBox.getSelectedItem() == "Single"){
                System.out.println("audio single");
                theType = "audio single";
            }
            else if(pTypeBox.getSelectedItem() == "Album"){
                System.out.println("audio album");
                theType = "audio album";
            }
           
            if(explicitBox.isSelected() == true){
                System.out.println("explicit? -- Yes");
                rude = "true";
            }
            else if(explicitBox.isSelected() == false){
                System.out.println("explicit? -- NO");
                rude = "false";
            }            
            
            System.out.println(distText.getText()+upcText.getText()+theType);
            
            if(isEdit == false){
            
            	
            	
                theXml = new Xml(distText.getText(),
                                upcText.getText(),
                                theType,
                                labelText.getText(),
                                imageText.getText(),
                                titleText.getText(),
                                dateText.getText(),
                                publineText.getText(),
                                coplineText.getText(),
                                artistText.getText(),
                                new Boolean(rude)
                                );
                                

               test = true;
               System.out.println(test);
            
               for(int i =0; i<3; i++){
                   if(gfields[i].getText().equals("")){
                       }
                    else{
                       theXml.addGenre(gfields[i].getText());
                       gfields[i].setEnabled(false);
                    }
                }
                //genre method, sort!
                addTrkBut.setEnabled(true);
                addTerBut.setEnabled(true);
                addParBut.setEnabled(true);
                
                               
            }
            
            else if(isEdit==true){
                theXml.editTag("distributor",distText.getText());
                theXml.editTag("product upc",upcText.getText());
                theXml.editTag("product_type",theType);
                theXml.editTag("product_label",labelText.getText());
                theXml.editTag("product_image",imageText.getText());
                theXml.editTag("product_title",titleText.getText());
                theXml.editTag("product_release_date",dateText.getText());
                theXml.editTag("product_p_line",publineText.getText());
                theXml.editTag("product_c_line",coplineText.getText());
                theXml.editTag("product_artist_name",artistText.getText());
                theXml.editTag("explicit_content",rude);
                theXml.removeGenres();
                //removes existing genres
                for(int i =0; i<3; i++){
                   if(gfields[i].getText().equals("")){
                       }
                    else{
                       theXml.addGenre(gfields[i].getText());
                       gfields[i].setEnabled(false);
                    }
                }
                //adds new/edited genres
               
                
                                
                if(containsTrack == true){
                    editTrackButton.setEnabled(true);
                    removeTrackkButton.setEnabled(true);
                }
                addTrkBut.setEnabled(true);
                if(containsTer == true){
                    edtTerBut.setEnabled(true);
                    remTerBut.setEnabled(true);
                }
                addTerBut.setEnabled(true);
                if(containsPar == true){
                    edtParBut.setEnabled(true);
                    remParBut.setEnabled(true);
                }
                addParBut.setEnabled(true);
                productReady();
                                
            }
            edtPrdctBut.setEnabled(true);
            distText.setEditable(false);
           upcText.setEditable(false);
           pTypeBox.setEnabled(false);
           labelText.setEditable(false);
           imageText.setEditable(false);
           titleText.setEditable(false);
           dateText.setEditable(false);
           publineText.setEditable(false);
           coplineText.setEditable(false);
           artistText.setEditable(false);
           explicitBox.setEnabled(false);
           crtPrdctBut.setEnabled(false);
           
           for(int i=0; i<3;i++){
               gfields[i].setEnabled(false);
            }
        }
    }
    
    private class TrkHandler implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            trackGui = new TrackGui();
            trackGui.setVisible(true);
            trackGui.addXml(theXml);
            attachtotrack();                    
            trackCount = theXml.numOfTracks()+1;
            trackGui.setTrkNo(trackCount);
        }
    }
    
    private class TrkEditHandler implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            trackGui = new TrackGui();
            trackGui.setVisible(true);
            trackGui.addXml(theXml);
            attachtotrack();
            trackGui.setTrkNo(trackList.getSelectedIndex()+1);
            trackGui.setTrackAsEdit();
//            theXml.gettrck(trackList.getSelectedIndex());
        }
    }
    
    private class TrkRemHandler implements ActionListener{
        public void actionPerformed(ActionEvent e){
            theXml.removeTrk(trackList.getSelectedIndex());
            int newTrkNo = trackList.getSelectedIndex();
            for(int i = trackList.getSelectedIndex(); i<(sampleModel.getSize()-1); i++){
                newTrkNo += 1;
                theXml.editTrackTagValue(i,"track_number",Integer.toString(newTrkNo));
            }            
            remFrmTrkList(trackList.getSelectedIndex());  
            
            if(sampleModel.getSize() < 1){
                removeTrackkButton.setEnabled(false);
                editTrackButton.setEnabled(false);
                containsTrack = false;
            }              
        }
    }
    
    private class TerHandler implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            territory = new TerritoryGui();
            territory.setVisible(true);
            territory.connect(theXml,returnThis(),false);
        }
    }
    
    private class TerEditHandler implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            territory = new TerritoryGui();
            territory.setVisible(true);
            territory.setTerritoryNo(jList2.getSelectedIndex());
            territory.connect(theXml,returnThis(),true);
            territory.setEdit();
        }
    }
    
    private class TertRemHandler implements ActionListener{
        public void actionPerformed(ActionEvent e){
            theXml.removeTer(jList2.getSelectedIndex());
            remFrmTerList(jList2.getSelectedIndex());
            if(tersampleModel.getSize() < 1){
                remTerBut.setEnabled(false);
                edtTerBut.setEnabled(false);
                containsTer = false;
                productReady();
            }
        }
    }
    
    private class PrintHandler implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            theXml.printXml();
            JOptionPane.showMessageDialog(null, "XML Created!");;
        }
    }
    
    private class PartHandler implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            part = new ParticipantGui();
            part.ProductLevelConnect(theXml,returnThis());
            part.setVisible(true);
            part.connect(theXml,0,false,null);
            }
    }
    
    private class PartEditHandler implements ActionListener{
        public void actionPerformed(ActionEvent e){
            part = new ParticipantGui();
            part.ProductLevelConnect(theXml,returnThis());
            part.setVisible(true);
            part.connect(theXml,0,false,null);
            part.setEdit(participantsList.getSelectedIndex(),0);
            }
    }
    
    private class ParticipantRemovalHandler implements ActionListener{
        public void actionPerformed(ActionEvent e){
            theXml.removeParticipant(participantsList.getSelectedIndex());
            removeFromParticipantList(participantsList.getSelectedIndex());  
            if(participantSampleModel.getSize() < 1){
                remParBut.setEnabled(false);
                edtParBut.setEnabled(false);
                containsPar = false;
                productReady();
            }
        }
    }
    
    private class StartOverHandler implements ActionListener{
        public void actionPerformed(ActionEvent e){
            theXml = null;
            distText.setEditable(true);
            distText.setText("");
            upcText.setEditable(true);
            upcText.setText("");
            pTypeBox.setEnabled(true);
            labelText.setEditable(true);
            labelText.setText("");
            imageText.setEditable(true);
            imageText.setText("");
            titleText.setEditable(true);
            titleText.setText("");
            dateText.setEditable(true);
            dateText.setText("");
            publineText.setEditable(true);
            publineText.setText("");
            coplineText.setEditable(true);
            coplineText.setText("");
            artistText.setEditable(true);
            artistText.setText("");
            explicitBox.setEnabled(true);
            sampleModel = new DefaultListModel();
            for(int i = 0; i<tracklist.length; i++){
                sampleModel.addElement(tracklist[i]);
            }
            trackList.setModel(sampleModel);
            
            tersampleModel = new DefaultListModel();
            for(int i = 0; i<terlist.length; i++){
                tersampleModel.addElement(terlist[i]);
            }
        
            jList2.setModel(tersampleModel);

            participantSampleModel = new DefaultListModel();
            for(int i = 0; i<parlist.length; i++){
                participantSampleModel.addElement(parlist[i]);
            }
            participantsList.setModel(participantSampleModel);
            for(int i =0; i<3; i++){
                gfields[i].setEnabled(true);
                gfields[i].setText("");
            }
            
            addParBut.setEnabled(false);
            remParBut.setEnabled(false);
            edtParBut.setEnabled(false);
            
            addTrkBut.setEnabled(false);
            removeTrackkButton.setEnabled(false);
            editTrackButton.setEnabled(false);
            
            addTerBut.setEnabled(false);
            remTerBut.setEnabled(false);
            edtTerBut.setEnabled(false);
            
            edtPrdctBut.setEnabled(false);
            crtPrdctBut.setEnabled(true);
            mkXmlBut.setEnabled(false);
            isEdit=false;
        }
    }
    private class ProdEdtHandler implements ActionListener{
        public void actionPerformed(ActionEvent e){
            
            isEdit =true;
                        
            addParBut.setEnabled(false);
            remParBut.setEnabled(false);
            edtParBut.setEnabled(false);
            
            addTrkBut.setEnabled(false);
            removeTrackkButton.setEnabled(false);
            editTrackButton.setEnabled(false);
            
            addTerBut.setEnabled(false);
            remTerBut.setEnabled(false);
            edtTerBut.setEnabled(false);
            
            distText.setEditable(true);
            upcText.setEditable(true);
            pTypeBox.setEnabled(true);
            labelText.setEditable(true);
            imageText.setEditable(true);
            titleText.setEditable(true);
            dateText.setEditable(true);
            publineText.setEditable(true);
            coplineText.setEditable(true);
            artistText.setEditable(true);
            explicitBox.setEnabled(true);
            
            for(int i =0; i<3; i++){
                gfields[i].setEnabled(true);
            }
            crtPrdctBut.setEnabled(true);
            mkXmlBut.setEnabled(false);
            edtPrdctBut.setEnabled(false);
        }
    }
    
    private class ExcelImpHandler implements ActionListener{
        public void actionPerformed(ActionEvent e){
            excelReader = new ReadGui();
            excelReader.setVisible(true);
        }
    }
}
