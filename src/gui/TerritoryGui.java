package gui;
//Import Statements

import javax.swing.*;
import main.Xml;
import model.Territory;

import java.awt.event.*;

public class TerritoryGui extends javax.swing.JFrame {

    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox restrictedBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton okBut;
    private javax.swing.JTextField terCodeText;
    private javax.swing.JTextField terPCodeText;
    private javax.swing.JTextField terRelDateText;
    
    private ButHandler butlis = null;
    private Xml theXml = null;
    private ProductGui productGui= null;
    
    private boolean isEdit = false;
    private int terPos;

    public TerritoryGui() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        terRelDateText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        terPCodeText = new javax.swing.JTextField();
        restrictedBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        okBut = new javax.swing.JButton();
        terCodeText = new javax.swing.JTextField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Territory - 7digital");

        jLabel1.setText("Territory Code");

        terRelDateText.setText("YYYYMMDD");

        jLabel2.setText("Territory Release Date");

        jLabel3.setText("Price Code");

        restrictedBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "True", "False" }));

        jLabel4.setText("Restricted to");

        okBut.setText("OK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okBut)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(terCodeText, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(restrictedBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(terPCodeText, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(terRelDateText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(restrictedBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(terCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(terRelDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(terPCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    )
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okBut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        butlis = new ButHandler();
        okBut.addActionListener(butlis);

        pack();
    }// </editor-fold>

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TerritoryGui().setVisible(true);
            }
        });
    }
    
    
    public void connect(Xml anXml,ProductGui pro, boolean edit){
        theXml = anXml;
        productGui = pro;
        isEdit = edit;
    }
    
    public void setTerritoryNo(int theNum){
        terPos = theNum;
    }

   public void setEdit(){
	   Territory territory = theXml.getTerritory(terPos);
       restrictedBox.setSelectedItem(new Boolean(territory.isRestrictedTo).toString());

       
       terCodeText.setText(territory.code);
       terRelDateText.setText(territory.releaseDate);
       terPCodeText.setText(territory.priceCode);
       
       
       /**String theCurCode = "";
       if(theCurCode == "EUR"){
           teCurCodeBox.setSelectedItem("EUR Euro");
        }
       if(theCurCode == "GBP"){
           teCurCodeBox.setSelectedItem("GBP United Kingdom Pounds");
        }
       if(theCurCode == "USD"){
           teCurCodeBox.setSelectedItem("USD United States Dollars");
        }
       if(theCurCode == "AUD"){
           teCurCodeBox.setSelectedItem("AUD Australian Dollars");
        }
       if(theCurCode == "CAD"){
           teCurCodeBox.setSelectedItem("CAD Canadian Dollars");
        }
       if(theCurCode == "CHF"){
           teCurCodeBox.setSelectedItem("CHF Switzerland Francs");
        }
       if(theCurCode == "DKK"){
           teCurCodeBox.setSelectedItem("DKK Denmark Kroner");
        }
       if(theCurCode == "NOK"){
           teCurCodeBox.setSelectedItem("NOK Norway Kroner");
        }
       if(theCurCode == "SEK"){
           teCurCodeBox.setSelectedItem("SEK Sweden Kronor");
        }*/
       
    }
      
    
    private class ButHandler implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            
            if(terCodeText.getText().equals("")){
                       JOptionPane.showMessageDialog(null, "Please enter a territory code");;
                    }
            else{            

                

            
            
            String curCode ="";
           /** if(teCurCodeBox.getSelectedItem()=="EUR Euro"){
                curCode = "EUR";
            }
            
            if(teCurCodeBox.getSelectedItem()=="GBP United Kingdom Pounds"){
                curCode = "GBP";
            }
            
            if(teCurCodeBox.getSelectedItem()=="USD United States Dollars"){
                curCode = "USD";
            }
            
            if(teCurCodeBox.getSelectedItem()=="AUD Australian Dollars"){
                curCode = "AUD";
            }
            
            if(teCurCodeBox.getSelectedItem()=="CAD Canadian Dollars"){
                curCode = "CAD";
            }
            
            if(teCurCodeBox.getSelectedItem()=="CHF Switzerland Francs"){
                curCode = "CHF";
            }
            
            if(teCurCodeBox.getSelectedItem()=="DKK Denmark Kroner"){
                curCode = "DKK";
            }
            
            if(teCurCodeBox.getSelectedItem()=="NOK Norway Kroner"){
                curCode = "NOK";
            }
            
            else if(teCurCodeBox.getSelectedItem()=="SEK Sweden Kronor"){
                curCode = "SEK";
            }
            */
            Boolean isRestricted = Boolean.parseBoolean((String)restrictedBox.getSelectedItem());
			if(isEdit == false){            

               theXml.addTerritory(isRestricted,
                               terCodeText.getText(),
                               terRelDateText.getText(),
                               terPCodeText.getText(),
                               "",
                               curCode
                               );
                               
                productGui.updateTerList(terCodeText.getText());
                productGui.setTerritories();
                productGui.productCanBeprinted();
            }
            
            else if(isEdit == true){
            	
            	Territory territory = theXml.getTerritory(terPos);
                territory.isRestrictedTo= isRestricted;
                territory.code = terCodeText.getText();
                territory.releaseDate =terRelDateText.getText();
                territory.priceCode = terPCodeText.getText();
                productGui.updateTertitleInList(terPos, terCodeText.getText());
            }
           
            setVisible(false);
            dispose();
                           
           //make track frame close once done
        }
    }
    }

}// End of class TextFieldTest