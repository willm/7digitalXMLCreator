package gui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.ImageIcon;

import main.Xml;
import model.Participant;
/**
 *
 * @author Administrator
 */
public class ParticipantGui extends javax.swing.JFrame {

    // Variables declaration - do not modify
    private javax.swing.JButton okBut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField participantNameText;
    private javax.swing.JTextField participantRoleText;
    // End of variables declaration
    
    private Xml xml = null;
    private int trackNo;
    private int partNo;
    private OkHandler oklis =null;
    private boolean tracklevel = false;
    private boolean isEdit = false;
    private int trackNumber;
    private TrackGui trackGui = null;
    private ProductGui prod = null;


    /** Creates new form PartGui */
    public ParticipantGui() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        participantNameText = new javax.swing.JTextField();
        participantRoleText = new javax.swing.JTextField();
        okBut = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Participant - 7digital");

        jLabel1.setText("Add Participant");

        jLabel2.setText("Participant Name");

        jLabel3.setText("Participant Role");

        okBut.setText("OK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(participantNameText))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(okBut)
                                .addComponent(participantRoleText, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(participantNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(participantRoleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(okBut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        oklis = new OkHandler();
        okBut.addActionListener(oklis);        

        pack();
    }// </editor-fold>

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ParticipantGui().setVisible(true);
            }
        });
    }
    
    public void connect(Xml theXml, int tNo, boolean atTracklevel, TrackGui theTrack){
        xml = theXml;
        trackNo = tNo;
        if(atTracklevel == true){
            tracklevel =true;
            trackGui = theTrack;
        }
    }
    
    public void setEdit(int thePos, int pNo){
        isEdit = true;

        if(tracklevel ==false){
        	Participant participant = xml.getParticipant(pNo);
            participantNameText.setText(participant.Name);
            participantRoleText.setText(participant.Role);
        }
        else if(tracklevel ==true){
        	Participant participant =xml.getTrackParticipant(thePos, pNo);
            participantNameText.setText(participant.Name);
            participantRoleText.setText(participant.Role);
        }
    }
        
    
    public void ProductLevelConnect(Xml theXml, ProductGui theProduct){
        prod = theProduct;
        }
    
    private class OkHandler implements ActionListener{
        
        public void actionPerformed(ActionEvent e){
            if(isEdit ==false){
                if(tracklevel ==true){
                    xml.addTrackParticipent(trackNo,participantRoleText.getText(),participantNameText.getText());
                    System.out.println(participantNameText.getText() + "   " + participantRoleText.getText());
                    trackGui.updatePList(participantRoleText.getText() + " - " + participantNameText.getText());
                    //setVisible(false);
                   //dispose();
                }
                else{
                    xml.addParticipant(participantRoleText.getText(), participantNameText.getText());
                    System.out.println(participantNameText.getText() + "   " + participantRoleText.getText());
                    prod.updateParList(participantNameText.getText() + " - " + participantRoleText.getText());
                    //setVisible(false);
                    //dispose();
                }
            }
            else if(isEdit ==true){
                if(tracklevel ==true){
                    xml.replaceTrackParticipant(trackNumber,partNo,new Participant(participantRoleText.getText(),participantNameText.getText()));
                    trackGui.updateTrackParticipantInList(partNo,participantNameText.getText() + " - " + participantRoleText.getText());
                }
                else{
                    xml.replaceParticipant(partNo, new Participant(participantRoleText.getText(),participantNameText.getText()));
                    prod.updateParticipantInList(trackNumber, participantNameText.getText() + " - " + participantRoleText.getText());
                }
            }
            setVisible(false);
            dispose();
        }
    }
}
